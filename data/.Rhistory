timelinetje <- subset(timelines, followers == 10011)
timelinetje <- subset(timelines, followers => 10011)
timelinetje <- subset(timelines, followers >= 10011)
sum(timelinetje$streams)
library(readr)
supervision_sample_art1000 <- read_csv("Desktop/adoption/supervision_sample_art1000.csv")
View(supervision_sample_art1000)
library(readr)
tf_mini <- read_csv("Downloads/tf_mini.csv")
View(tf_mini)
dataset <- supervision_sample_art1000
dataset <- supervision_sample_art1000
supervision_sample_art1000
library(readr)
supervision_sample_art1000_1_ <- read_csv("Desktop/MASTER THESIS/Data/supervision_sample_art1000 (1).csv")
View(supervision_sample_art1000_1_)
summary(supervision_sample_art1000_1_$release_date)
library(readr)
tf_mini <- read_csv("Desktop/MASTER THESIS/Data/tf_mini.csv")
View(tf_mini)
library(readr)
tf_mini <- read_csv("Desktop/MASTER THESIS/Data/tf_mini.csv")
View(tf_mini)
View(supervision_sample_art1000_1_)
install.packages(blogdown)
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
weert <- read.csv("/Volumes/Wouter\'s\ T7/Tilburg\ University/Blok\ 3/Online\ Data\ Collection/Datafiles\ Funda/weert.csv")
View(weert)
library(readr)
export_page1_stramproy <- read_csv("Documents/export_page1_stramproy.csv")
View(export_page1_stramproy)
library(readr)
export_page1_stramproy2 <- read_csv("Documents/export_page1_stramproy2.csv")
View(export_page1_stramproy2)
library(readr)
testobject <- read_csv("Documents/testobject.csv")
View(testobject)
library(readr)
test2 <- read_csv("Documents/test2.csv")
View(test2)
library(readr)
listings <- read_csv("Downloads/listings.csv")
View(listings)
library(readr)
calendar <- read_csv("Downloads/calendar.csv")
View(calendar)
library(readr)
test24 <- read_csv("Documents/test24.csv")
View(test24)
library(readr)
scraped2 <- read_csv("Desktop/scraped2.csv")
View(scraped2)
library(readr)
scraped2 <- read_csv("Desktop/scraped2.csv")
View(scraped2)
View(n)
Stad<- 'Roermond'
Roermond2 <- add_column(Roermond, Stad, .after =1)
install.packages("tibble")                             # Install & load tibble package
library("tibble")
Stad<- 'Roermond'
Roermond2 <- add_column(Roermond, Stad, .after =1)
library(readr)
Roermond <- read_csv("Desktop/DATAFILES OCDM/Provincie/Limburg/Roermond.csv")
View(Roermond)
Stad<- 'Roermond'
Roermond2 <- add_column(Roermond, Stad, .after =1)
View(Roermond2)
library(readr)
Eindhoven <- read_csv("Desktop/DATAFILES OCDM/Provincie/Noord-Brabant/Eindhoven.csv")
View(Eindhoven)
library(readr)
Eindhoven <- read_csv("Desktop/DATAFILES OCDM/Provincie/Noord-Brabant/Eindhoven.csv")
View(Eindhoven)
library(readr)
Dordrecht <- read_csv("Desktop/DATAFILES OCDM/Provincie/Zuid-Holland/Dordrecht.csv")
View(Dordrecht)
library(readr)
Eindhoven <- read_csv("Desktop/DATAFILES OCDM/Provincie/Noord-Brabant/Eindhoven.csv")
View(Eindhoven)
eindhoven2 <- eindhoven[-c(1,50)]
eindhoven
eindhoven2 <- eindhoven.csv[-c(1,50)]
library(readr)
Eindhoven <- read_csv("Desktop/DATAFILES OCDM/Provincie/Noord-Brabant/Eindhoven.csv")
View(Eindhoven)
eindhoven2 <- eindhoven[-c(1,50)]
eindhoven2 <- Eindhoven[-c(1,50)]
eindhoven2 <- Eindhoven[-c(1:50)]
eindhoven2 <- Eindhoven[-c(1:50)]
eindhoven2 <- Eindhoven[c(1:50)]
View(eindhoven2)
eindhoven2 <- Eindhoven[c(2:50)]
View(eindhoven2)
library(readr)
Budel <- read_csv("Desktop/DATAFILES OCDM/Provincie/Noord-Brabant/Budel.csv")
View(Budel)
library(readr)
Stramproy <- read_csv("Documents/Tilburg University/Semester 3/Online Data Collection/Stramproy.csv")
View(Stramproy)
library(readr)
Stramproy2 <- read_csv("Documents/Tilburg University/Semester 3/Online Data Collection/Stramproy2.csv")
View(Stramproy2)
library(readr)
Stramproy4 <- read_csv("Documents/Tilburg University/Semester 3/Online Data Collection/Stramproy4.csv")
View(Stramproy4)
View(n)
library(readr)
Stramproy5 <- read_csv("Documents/Tilburg University/Semester 3/Online Data Collection/Stramproy5.csv")
View(Stramproy5)
library(readr)
Stramproy8 <- read_csv("Documents/Tilburg University/Semester 3/Online Data Collection/Stramproy8.csv")
View(Stramproy8)
library(readr)
Eindhoven <- read_csv("Desktop/DATAFILES OCDM/Provincie/Noord-Brabant/Eindhoven.csv")
View(Eindhoven)
summary(Eindhoven$Oppervlakte)
Eindhoven$Oppervlakte<- as.numeric(Eindhoven$Oppervlakte)
summary(Eindhoven$Oppervlakte)
housemarket_clean$Bouwjaar <- as.numeric(housemarket_clean$Bouwjaar)
merged_data_housemarket <- read_csv('../../gen/data-preparation/output/second_output(merged file)/merged_data_housemarket.csv')
#remove everything but city, price, selling duration and construction year
housemarket_dataset_na <- merged_data_housemarket[c(4,6,7,9,14)]
#remove na's
housemarket_clean <- housemarket_dataset_na %>% drop_na()
#remove unwanted characterss
housemarket_clean$`Laatste vraagprijs` <-  str_replace(housemarket_clean$`Laatste vraagprijs`, "kosten koper", "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'vrij op naam', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '\nHypotheekadvies', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'Prijs op aanvraag', "")
#housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '€', "")
#convert blank spaces introduced by cleaning to NA (in order to remove them)
housemarket_clean <- housemarket_clean %>% mutate_all(na_if,"")
#remove NA's again
housemarket_clean <- housemarket_clean %>% drop_na()
#create new NUMERIC variable for price
housemarket_clean$`Laatste vraagprijs_num` <- as.numeric(gsub('[€.]', '', housemarket_clean$`Laatste vraagprijs`))
library(tidyverse)
library(tidyr)
merged_data_housemarket <- read_csv('../../gen/data-preparation/output/second_output(merged file)/merged_data_housemarket.csv')
#remove everything but city, price, selling duration and construction year
housemarket_dataset_na <- merged_data_housemarket[c(4,6,7,9,14)]
#remove na's
housemarket_clean <- housemarket_dataset_na %>% drop_na()
#remove unwanted characterss
housemarket_clean$`Laatste vraagprijs` <-  str_replace(housemarket_clean$`Laatste vraagprijs`, "kosten koper", "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'vrij op naam', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '\nHypotheekadvies', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'Prijs op aanvraag', "")
#housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '€', "")
#convert blank spaces introduced by cleaning to NA (in order to remove them)
housemarket_clean <- housemarket_clean %>% mutate_all(na_if,"")
#remove NA's again
housemarket_clean <- housemarket_clean %>% drop_na()
#create new NUMERIC variable for price
housemarket_clean$`Laatste vraagprijs_num` <- as.numeric(gsub('[€.]', '', housemarket_clean$`Laatste vraagprijs`))
merged_data_housemarket <- read_csv('../../gen/data-preparation/output/second_output(merged file)/merged_data_housemarket.csv')
merged_data_housemarket <- read_csv('../gen/data-preparation/output/second_output(merged file)/merged_data_housemarket.csv')
merged_data_housemarket <- read_csv('../gen/data-preparation/output/second_output(merged file)/merged_data_housemarket.csv')
library(readr)
merged_data_housemarket <- read_csv("Desktop/dprep/investigating-funda/gen/data-preparation/output/second_output(merged file)/merged_data_housemarket.csv")
View(merged_data_housemarket)
merged_data_housemarket <- merged_data_housemarket
housemarket_dataset_na <- merged_data_housemarket[c(4,6,7,9,14)]
housemarket_clean <- housemarket_dataset_na %>% drop_na()
#remove unwanted characterss
housemarket_clean$`Laatste vraagprijs` <-  str_replace(housemarket_clean$`Laatste vraagprijs`, "kosten koper", "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'vrij op naam', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '\nHypotheekadvies', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'Prijs op aanvraag', "")
#housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '€', "")
#convert blank spaces introduced by cleaning to NA (in order to remove them)
housemarket_clean <- housemarket_clean %>% mutate_all(na_if,"")
#remove NA's again
housemarket_clean <- housemarket_clean %>% drop_na()
#create new NUMERIC variable for price
housemarket_clean$`Laatste vraagprijs_num` <- as.numeric(gsub('[€.]', '', housemarket_clean$`Laatste vraagprijs`))
housemarket_clean$Bouwjaar <- as.numeric(housemarket_clean$Bouwjaar)
View(housemarket_clean)
merged_data_housemarket <- merged_data_housemarket
housemarket_dataset_na <- merged_data_housemarket[c(4,6,7,9,14)]
#remove na's
housemarket_clean <- housemarket_dataset_na %>% drop_na()
#remove unwanted characterss
housemarket_clean$`Laatste vraagprijs` <-  str_replace(housemarket_clean$`Laatste vraagprijs`, "kosten koper", "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'vrij op naam', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '\nHypotheekadvies', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'Prijs op aanvraag', "")
#housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '€', "")
#convert blank spaces introduced by cleaning to NA (in order to remove them)
housemarket_clean <- housemarket_clean %>% mutate_all(na_if,"")
#remove NA's again
housemarket_clean <- housemarket_clean %>% drop_na()
#create new NUMERIC variable for price
housemarket_clean$`Laatste vraagprijs_num` <- as.numeric(gsub('[€.]', '', housemarket_clean$`Laatste vraagprijs`))
View(housemarket_clean)
housemarket_clean$Bouwjaar <- as.numeric(gbsub('[voor 1906]', '1906',housemarket_clean$Bouwjaar))
library(tidyverse)
library(tidyr)
housemarket_clean$Bouwjaar <- as.numeric(gsub('[voor 1906]', '1906',housemarket_clean$Bouwjaar))
merged_data_housemarket <- merged_data_housemarket
#remove everything but city, price, selling duration and construction year
housemarket_dataset_na <- merged_data_housemarket[c(4,6,7,9,14)]
#remove na's
housemarket_clean <- housemarket_dataset_na %>% drop_na()
#remove unwanted characterss
housemarket_clean$`Laatste vraagprijs` <-  str_replace(housemarket_clean$`Laatste vraagprijs`, "kosten koper", "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'vrij op naam', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '\nHypotheekadvies', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'Prijs op aanvraag', "")
#housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '€', "")
#convert blank spaces introduced by cleaning to NA (in order to remove them)
housemarket_clean <- housemarket_clean %>% mutate_all(na_if,"")
#remove NA's again
housemarket_clean <- housemarket_clean %>% drop_na()
#create new NUMERIC variable for price
housemarket_clean$`Laatste vraagprijs_num` <- as.numeric(gsub('[€.]', '', housemarket_clean$`Laatste vraagprijs`))
housemarket_clean$Bouwjaar <- as.numeric(gsub('[voor 1906]', '1906',housemarket_clean$Bouwjaar))
merged_data_housemarket <- merged_data_housemarket
#remove everything but city, price, selling duration and construction year
housemarket_dataset_na <- merged_data_housemarket[c(4,6,7,9,14)]
#remove na's
housemarket_clean <- housemarket_dataset_na %>% drop_na()
#remove unwanted characterss
housemarket_clean$`Laatste vraagprijs` <-  str_replace(housemarket_clean$`Laatste vraagprijs`, "kosten koper", "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'vrij op naam', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '\nHypotheekadvies', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'Prijs op aanvraag', "")
#housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '€', "")
#convert blank spaces introduced by cleaning to NA (in order to remove them)
housemarket_clean <- housemarket_clean %>% mutate_all(na_if,"")
#remove NA's again
housemarket_clean <- housemarket_clean %>% drop_na()
#create new NUMERIC variable for price
housemarket_clean$`Laatste vraagprijs_num` <- as.numeric(gsub('[€.]', '', housemarket_clean$`Laatste vraagprijs`))
View(housemarket_clean)
housemrket_clean$Bouwjaar <-  str_replace(housemrket_clean$Bouwjaar, "Voor 1906", "1906")
housemarket_clean$Bouwjaar <-  str_replace(housemarket_clean$Bouwjaar, "Voor 1906", "1906")
housemarket_clean$Bouwjaar <- as.numeric(housemarket_clean$Bouwjaar)
housemarket_clean <- housemarket_clean %>% mutate_all(na_if,"")
housemarket_clean$`Aangeboden sinds_date_2` <-  str_replace_all(housemarket_clean$`Aangeboden sinds`, c("januari"= "01", "februari"= "02", "maart"= "03", "april"= "04", "mei"= "05", "juni"= "06",
"juli"="07", "augustus"= "08", "september"= "09", "oktober"= "10", "november"= "11",
"december"= "12", ""= "-"))
housemarket_clean$`Aangeboden sinds_date_2` <-  str_replace_all(housemarket_clean$`Aangeboden sinds`, c("januari"= "01", "februari"= "02", "maart"= "03", "april"= "04", "mei"= "05", "juni"= "06",
"juli"="07", "augustus"= "08", "september"= "09", "oktober"= "10", "november"= "11",
"december"= "12", " "= "-"))
housemarket_clean$`Verkoopdatum_2` <-  str_replace_all(housemarket_clean$`Aangeboden sinds`, c("januari"= "01", "februari"= "02", "maart"= "03", "april"= "04", "mei"= "05", "juni"= "06",
"juli"="07", "augustus"= "08", "september"= "09", "oktober"= "10", "november"= "11",
"december"= "12", " "= "-"))
as.Date(housemarket_clean$`Verkoopdatum_2`, format = "%d/%m/%Y")
as.Date(housemarket_clean$`Verkoopdatum_2` <-  , format = "%d-%m-%Y")
"december"= "12", " "= "-"))
as.Date(housemarket_clean$`Verkoopdatum_2`, format = "%d-%m-%Y")
as.Date(housemarket_clean$`Verkoopdatum_2`, format = "%Y-%m-%d")
as.Date(housemarket_clean$`Verkoopdatum_2`, format = "%d-%m-%Y")
housemarket_clean$`Verkoopdatum_2` <- as.Date(housemarket_clean$`Verkoopdatum_2`, format = "%d-%m-%Y")
housemarket_clean$`Aangeboden sinds_date_2` <- as.Date(housemarket_clean$`Aangeboden sinds_date_2, format = "%d-%m-%Y" )
housemarket_clean$`Aangeboden sinds_date_2` <- as.Date(housemarket_clean$`Aangeboden sinds_date_2, format = "%d-%m-%Y" )
housemarket_clean$Aangeboden sinds_date_2 <- as.Date(housemarket_clean$Aangeboden sinds_date_2, format = "%d-%m-%Y")
housemarket_clean$`Verkoopdatum_2` <- as.Date(housemarket_clean$`Verkoopdatum_2` , format = "%d-%m-%Y")
housemarket_clean$`Aangeboden sinds_date_2` <- as.Date(housemarket_clean$`Aangeboden sinds_date_2`, format = "%d-%m-%Y")
housemarket_clean$sellingduration <- housemarket_clean$`Verkoopdatum_2`- housemarket_clean$`Aangeboden sinds_date_2`
housemarket_clean$sellingduration <- housemarket_clean$`Aangeboden sinds_date_2` - housemarket_clean$`Verkoopdatum_2`
housemarket_clean$sellingduration <- difftime(housemarket_clean$`Aangeboden sinds_date_2`, housemarket_clean$`Verkoopdatum_2` , units = c("days"))
housemarket_clean <- housemarket_clean[-c(9)]
housemarket_clean$sellingduration <- difftime(housemarket_clean$`Verkoopdatum_2`, housemarket_clean$`Aangeboden sinds_date_2`, units = c("days"))
merged_data_housemarket <- merged_data_housemarket
merged_data_housemarket <- read_csv('../gen/data-preparation/output/second_output(merged file)/merged_data_housemarket.csv')
library(readr)
merged_data_housemarket <- read_csv("Desktop/dprep/investigating-funda/gen/data-preparation/output/second_output(merged file)/merged_data_housemarket.csv")
View(merged_data_housemarket)
merged_data_housemarket <- merged_data_housemarket
housemarket_dataset_na <- merged_data_housemarket[c(4,6,7,9,14)]
housemarket_clean <- housemarket_dataset_na %>% drop_na()
#remove unwanted characterss
housemarket_clean$`Laatste vraagprijs` <-  str_replace(housemarket_clean$`Laatste vraagprijs`, "kosten koper", "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'vrij op naam', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '\nHypotheekadvies', "")
housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, 'Prijs op aanvraag', "")
#housemarket_clean$`Laatste vraagprijs` <- str_replace(housemarket_clean$`Laatste vraagprijs`, '€', "")
#convert blank spaces introduced by cleaning to NA (in order to remove them)
housemarket_clean <- housemarket_clean %>% mutate_all(na_if,"")
#remove NA's again
housemarket_clean <- housemarket_clean %>% drop_na()
#create new NUMERIC variable for price
housemarket_clean$`Laatste vraagprijs_num` <- as.numeric(gsub('[€.]', '', housemarket_clean$`Laatste vraagprijs`))
#convert Bouwjaar into NUMERIC variable
housemarket_clean$Bouwjaar <-  str_replace(housemarket_clean$Bouwjaar, "Voor 1906", "1906")
housemarket_clean$Bouwjaar <- as.numeric(housemarket_clean$Bouwjaar)
housemarket_clean <- housemarket_clean %>% mutate_all(na_if,"")
housemarket_clean$`Aangeboden sinds_date_2` <-  str_replace_all(housemarket_clean$`Aangeboden sinds`, c("januari"= "01", "februari"= "02", "maart"= "03", "april"= "04", "mei"= "05", "juni"= "06",
"juli"="07", "augustus"= "08", "september"= "09", "oktober"= "10", "november"= "11",
"december"= "12", " "= "-"))
housemarket_clean$`Verkoopdatum_2` <-  str_replace_all(housemarket_clean$`Verkoopdatum`, c("januari"= "01", "februari"= "02", "maart"= "03", "april"= "04", "mei"= "05", "juni"= "06",
"juli"="07", "augustus"= "08", "september"= "09", "oktober"= "10", "november"= "11",
"december"= "12", " "= "-"))
View(housemarket_clean)
housemarket_clean$`Aangeboden sinds_date_2` <- as.Date(housemarket_clean$`Aangeboden sinds_date_2`, format = "%d-%m-%Y")
housemarket_clean$`Verkoopdatum_2` <- as.Date(housemarket_clean$`Verkoopdatum_2` , format = "%d-%m-%Y")
housemarket_clean$sellingduration <- difftime(housemarket_clean$`Verkoopdatum_2`, housemarket_clean$`Aangeboden sinds_date_2`, units = c("days"))
housemarket_clean <- housemarket_clean[c(1,5,6,9)]
library(dplyr)
housemarket_clean %>%
rename(
Laatste vraagprijs_num = Selling price,
sellingduration = Selling duration
)
housemarket_clean %>%
rename('Laatste vraagprijs_num' = 'Selling price', 'sellingduration' = 'Selling duration')
housemarket_clean %>%
rename('Laatste vraagprijs_num' = Selling price, 'sellingduration' = Selling duration)
housemarket_clean %>%
rename(Laatste vraagprijs_num = Selling price, sellingduration = Selling duration)
names(housemarket_clean)[3] <- "Selling Price"
names(housemarket_clean)[4] <- "Selling Duration"
names(housemarket_clean)[3] <- "Selling Price (in euros)"
names(housemarket_clean)[4] <- "Selling Duration (in days)"
library(shiny)
ui <- fluidPage()
server <- function(input, output){}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
h2("COVID-19 Mobility Data"),
selectInput(inputId = "dv", label = "Category",
choices = c("Retail_Recreation", "Grocery_Pharmarcy", "Parks", "Transit_Stations", "Workplaces", "Residential"),
selected = "Grocery_Pharmarcy"),
selectInput(inputId = "provinces", "Province(s)",
choices = levels(mobility$Province),
multiple = TRUE,
selected = c("Utrecht", "Friesland", "Zeeland")),
dateRangeInput(inputId = "date", label = "Date range",
start = min(mobility$Date),
end   = max(mobility$Date)),
downloadButton(outputId = "download_data", label = "Download"),
),
mainPanel(
plotlyOutput(outputId = "plot"),
em("Postive and negative percentages indicate an increase and decrease from the baseline period (median value between January 3 and February 6, 2020) respectively."),
DT::dataTableOutput(outputId = "table")
)
)
)
View(housemarket_clean)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
h2("Expected Selling duration"),
selectInput(inputId = "dv", label = "Category",
choices = levels(housemarket_clean$Stad)),
selected = "Eindhoven"),
downloadButton(outputId = "download_data", label = "Download"),
),
mainPanel(
plotlyOutput(outputId = "plot"),
em("Postive and negative percentages indicate an increase and decrease from the baseline period (median value between January 3 and February 6, 2020) respectively."),
DT::dataTableOutput(outputId = "table")
)
)
)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
h2("Expected Selling duration"),
selectInput(inputId = "dv", label = "Category",
choices = levels(housemarket_clean$Stad)),
selected = "Eindhoven"),
downloadButton(outputId = "download_data", label = "Download"),
),
mainPanel(
plotlyOutput(outputId = "plot"),
em("Postive and negative percentages indicate an increase and decrease from the baseline period (median value between January 3 and February 6, 2020) respectively."),
DT::dataTableOutput(outputId = "table")
)
)
)
shinyApp(ui = ui, server = server)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
h2("Expected Selling duration"),
selectInput(inputId = "dv", label = "Category",
choices = levels(housemarket_clean$Stad)),
selected = "Eindhoven"),
downloadButton(outputId = "download_data", label = "Download"),
),
mainPanel(
plotlyOutput(outputId = "plot"),
em("Postive and negative percentages indicate an increase and decrease from the baseline period (median value between January 3 and February 6, 2020) respectively."),
DT::dataTableOutput(outputId = "table")
)
)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
h2("Expected Selling duration"),
selectInput(inputId = "dv", label = "Category",
choices = levels(housemarket_clean$Stad)),
selected = "Eindhoven"),
downloadButton(outputId = "download_data", label = "Download"),
),
mainPanel(
plotlyOutput(outputId = "plot"),
em("Postive and negative percentages indicate an increase and decrease from the baseline period (median value between January 3 and February 6, 2020) respectively."),
DT::dataTableOutput(outputId = "table")
)
library(shiny)
ui <- fluidPage()
server <- function(input, output){}
shinyApp(ui = ui, server = server)
View(housemarket_clean)
library(shiny)
library(DT)
library(plotly)
install.packages(plotly)
install.packages("plotly")
library(shiny)
library(DT)
library(plotly)
cleaned_dataset_housemarket <- read.csv("/Users/woutervanakkeren/Desktop/dprep/investigating-funda/gen/data-preparation/output/cleaned_dataset_housemarket.csv")
cleaned_dataset_housemarket$stad <- as.factor(cleaned_dataset_housemarket$stad)
cleaned_dataset_housemarket$sellingprice<- cleaned_dataset_housemarket$`Selling Price (in euros)`
cleaned_dataset_housemarket$sellingduration<- cleaned_dataset_housemarket$`Selling Duration (in days)`
cleaned_dataset_housemarket <- cleaned_dataset_housemarket[-c(1,2)]
View(cleaned_dataset_housemarket)
cleaned_dataset_housemarket <- read.csv("/Users/woutervanakkeren/Desktop/dprep/investigating-funda/gen/data-preparation/output/cleaned_dataset_housemarket.csv")
cleaned_dataset_housemarket$stad <- as.factor(cleaned_dataset_housemarket$stad)
cleaned_dataset_housemarket$sellingprice<- cleaned_dataset_housemarket$`Selling Price (in euros)`
cleaned_dataset_housemarket$sellingduration<- cleaned_dataset_housemarket$`Selling Duration (in days)`
View(cleaned_dataset_housemarket)
cleaned_dataset_housemarket <- read.csv("/Users/woutervanakkeren/Desktop/dprep/investigating-funda/gen/data-preparation/output/cleaned_dataset_housemarket.csv")
cleaned_dataset_housemarket <- read.csv("/Users/woutervanakkeren/Desktop/dprep/investigating-funda/gen/data-preparation/output/cleaned_dataset_housemarket.csv", sep= "")
cleaned_dataset_housemarket <- read.csv("/Users/woutervanakkeren/Desktop/dprep/investigating-funda/gen/data-preparation/output/cleaned_dataset_housemarket.csv", sep= ";")
cleaned_dataset_housemarket <- read.csv("/Users/woutervanakkeren/Desktop/dprep/investigating-funda/gen/data-preparation/output/cleaned_dataset_housemarket.csv")
cleaned_dataset_housemarket$stad <- as.factor(cleaned_dataset_housemarket$stad)
View(cleaned_dataset_housemarket)
cleaned_dataset_housemarket$sellingprice<- cleaned_dataset_housemarket$Selling.Price..in.euros.
cleaned_dataset_housemarket$sellingduration<- cleaned_dataset_housemarket$Selling.Duration..in.days.
cleaned_dataset_housemarket <- cleaned_dataset_housemarket[-c(1,2)]
ui <- fluidPage(
pageWithSidebar(
headerPanel("TITEL DATASET"),
sidebarPanel(
selectInput(inputId = "dv", label = "city",
choices = levels(cleaned_dataset_housemarket$stad),
multiple= TRUE,
selected = "Maastricht"),
#sliderInput(inputId= "price",
#label = "price",
#min = min(cleaned_dataset_housemarket$sellingprice), max = max(cleaned_dataset_housemarket$sellingprice), value =0 ),
#numericInput(inputId="constructionyear", label= "constructionyear", value= 1),
downloadButton(outputId = "download_data", label = "Download", value= 1),
),
mainPanel(
plotlyOutput(outputId = "plot"),
em("Postive and negative percentages indicate an increase and decrease from the baseline period (median value between January 3 and February 6, 2020) respectively."),
DT::dataTableOutput(outputId = "table")
)
)
)
server <- function(input, output) {
filtered_data <- reactive({
subset(mobility,
city %in% input$city
)})
output$plot <- renderPlotly({
ggplotly({
p <- ggplot(filtered_data(), aes_string(x="price", y=cleaned_dataset_housemarket$sellingduration, color="city")) +
geom_point(alpha=0.5) + theme(legend.position = "none") +
ylab("% change from baseline")
p
})
})
output$table <- DT::renderDataTable({
filtered_data()
})
output$download_data <- downloadHandler(
filename = "download_data.csv",
content = function(file) {
data <- filtered_data()
write.csv(data, file, row.names = FALSE)
}
)
}
shinyApp(ui = ui, server = server)
setwd(/Users/woutervanakkeren/Desktop/Final Datapackage ODCM/data/)
setwd('/Users/woutervanakkeren/Desktop/Final Datapackage ODCM/data/')
read.csv("eindhoven.csv")
eindhoven <- read.csv("eindhoven.csv")
#summary
summary(eindhoven)
hist(eindhoven$Laatste.vraagprijs)
#
class(eindhoven)
#
class(eindhoven$Aangeboden.sinds)
class(eindhoven$Laatste.vraagprijs)
eindhoven[rowSums(is.na(eindhoven))==0,]
na.omit(eindhoven)
apply(eindhoven, 2, function(x) any(is.na(x)))
len(apply(eindhoven, 2, function(x) any(is.na(x)))== TRUE)
length(apply(eindhoven, 2, function(x) any(is.na(x)))== TRUE)
length(apply(eindhoven, 2, function(x) any(is.na(x)))== FALSE)
length(apply(eindhoven, 2, function(x) any(is.na(x))) == FALSE)
length(apply(eindhoven$, 2, function(x) any(is.na(x))) == FALSE)
head(eindhoven)
#number of observations
nrow(eindhoven)
View(eindhoven)
